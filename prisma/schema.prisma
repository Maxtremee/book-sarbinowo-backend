datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

enum ReservationState {
  ACTIVE
  CANCELED
}

model User {
  id    String @id @default(cuid())
  email String @unique
  role  Role   @default(USER)
  name  String @default("User")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password     Password?
  reservations Reservation[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Reservation {
  id String @id @default(cuid())

  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  state     ReservationState @default(ACTIVE)

  since  DateTime
  until  DateTime
  guests Guest[]

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade)
  userId String
}

model Guest {
  id String @id @default(cuid())

  email String?
  name  String

  reservation   Reservation @relation(fields: [reservationId], references: [id], onUpdate: Cascade)
  reservationId String
}
